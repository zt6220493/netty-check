server:
  port: 5070
  servlet: 
   context-path: /iot-shadow
  uri-encoding: utf-8
  
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://192.168.171.231:8080/eureka/

#这里一定要配这个 熔断器才生效
feign:
  hystrix:
    enabled: true
    


spring:
  application:
    name: iot-shadow
  ###数据库连接池配置###
  datasource:
    url: jdbc:mysql://192.168.171.231:3306/iot?characterEncoding=utf8&useUnicode=true
    username: root
    password: tyqmysql@26.40
    hikari:
      driver-class-name: com.mysql.jdbc.Driver
      connection-timeout: 30000
      minimum-idle: 20
      maximum-pool-size: 20 
  mvc:
    view:
      prefix: /WEB-INF/html
      suffix: .html   

  ###redis配置###      
  redis:
    host: 192.168.171.237
    database: 0 #redis使用的默认分区
    port: 6379
    password: ecar@123
    timeout: 2000
    lettuce:
      pool:
        max-active: 1024
        max-wait: 256
        max-idle: 512
        min-idle: 256

  ####mongoDB配置###
  data:
    mongodb:
      host: 192.168.171.237
      port: 27017
      database: eoc
      username: eocdb
      password: ecar_++123

  ###kafka配置###
  kafka:
    template:
      default-topic: test #默认topic
#    listener:
#      concurrency: 2  #指定listener 容器中的线程数，用于提高并发量
    consumer:
      group-id: shadow-group
      auto-offset-reset: latest
      enable-auto-commit: true
      auto-commit-interval: 1000
      max-poll-records: 100 #批量消费数量
      bootstrap-servers: 192.168.171.237:9092,192.168.171.238:9092
       
    producer:
      client-id: shadow-client
      batch-size: 100  #每次批量发送消息的数量
      retries: 3
      # 32MB的批处理缓冲区
      buffer-memory: 33554432
      bootstrap-servers: 192.168.171.237:9092,192.168.171.238:9092
      
#自定义参数配置
ecar:
 iot:
   tcp_sync_url: 'http://192.168.171.231:8089/eoc_gw_tcp/service/sendRecieveMessage'
   tsp_deviceLog_sync_url: 'http://skxbtest.e-car.cn:8099/SKXB/deviceLogRest/callBack.do'
