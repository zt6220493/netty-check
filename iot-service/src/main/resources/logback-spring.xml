<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true" scanPeriod="1800 seconds" debug="false">
	<contextName>iot-service</contextName>
    <property name="USER_HOME" value="/mydata/logs/iot-service/log" />
    <property scope="context" name="FILE_NAME" value="logs" />
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36}[%line] - %msg%n
            </pattern>
        </encoder>
    </appender>
    
    <!--控制台只输出调试日志    ALL-->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- <filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>
			<onMatch>ACCEPT</onMatch>  
  			<onMismatch>DENY</onMismatch>  
		</filter> -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%-5level [%contextName] %d{yyyy-MM-dd HH:mm:ss.SSS}[%thread] %logger - %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="debug" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${USER_HOME}/debug/debug.log</file>
		<!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>debug</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 归档的日志文件的路径，例如今天是2018-09-26日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
            	 而2018-09-26的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
            <fileNamePattern>${USER_HOME}/debug/debug-log-%d{yyyy-MM-dd}.%i.zip</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>100</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%-5level [%contextName] %d{yyyy-MM-dd HH:mm:ss.SSS}[%thread] %logger - %msg%n</pattern>
		</encoder>
	</appender>
	
	<appender name="info" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${USER_HOME}/info/info.log</file>
		<!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 归档的日志文件的路径，例如今天是2018-09-26日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
            	 而2018-09-26的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
            <fileNamePattern>${USER_HOME}/info/info-log-%d{yyyy-MM-dd}.%i.zip</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>100</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%-5level [%contextName] %d{yyyy-MM-dd HH:mm:ss.SSS}[%thread] %logger - %msg%n</pattern>
		</encoder>
	</appender>
	
	<appender name="warn" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${USER_HOME}/warn/warn.log</file>
		<!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>warn</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 归档的日志文件的路径，例如今天是2018-09-26日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
            	 而2018-09-26的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
            <fileNamePattern>${USER_HOME}/warn/warn-log-%d{yyyy-MM-dd}.%i.zip</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>100</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%-5level [%contextName] %d{yyyy-MM-dd HH:mm:ss.SSS}[%thread] %logger - %msg%n</pattern>
		</encoder>
	</appender>
	
	<appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${USER_HOME}/error/error.log</file>
		<!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 归档的日志文件的路径，例如今天是2018-09-26日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
            	 而2018-09-26的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
            <fileNamePattern>${USER_HOME}/error/error-log-%d{yyyy-MM-dd}.%i.zip</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>100</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%-5level [%contextName] %d{yyyy-MM-dd HH:mm:ss.SSS}[%thread] %logger - %msg%n</pattern>
		</encoder>
	</appender>
	
	<!--   队列配置、异步写入、性能调整、容量配置在这里 -->
	<appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>512</queueSize>
		<appender-ref ref="info" />
	</appender>
	<appender name="ASYNC-WARN" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>128</queueSize>
		<appender-ref ref="warn" />
	</appender>
	<appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>128</queueSize>
		<appender-ref ref="error" />
	</appender>
    

    <logger name="com.apache.ibatis" level="warn"/>
    <logger name="java.sql.Connection" level="warn"/>
    <logger name="java.sql.Statement" level="warn"/>
    <logger name="java.sql.PreparedStatement" level="warn"/>
    <logger name="org.springframework" level="warn" />
    <logger name="com.mchange.v2" additivity="true" level="warn" />
	<logger name="org.apache.kafka" additivity="true" level="warn" />
	<logger name="org.mongodb" additivity="true" level="error" />

    <root level="info">
        <appender-ref ref="STDOUT" />
		<appender-ref ref="ASYNC-INFO" />
		<appender-ref ref="ASYNC-WARN" />
		<appender-ref ref="ASYNC-ERROR" />
    </root>
</configuration>